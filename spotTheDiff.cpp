/*
This question is asked by Google. You are given two strings, s and t which only consist of lowercase letters. t is generated by shuffling the letters in s as well as potentially adding an additional random character. Return the letter that was randomly added to t if it exists, otherwise, return ’  ‘.
Note: You may assume that at most one additional character can be added to t.

Ex: Given the following strings...

s = "foobar", t = "barfoot", return 't'
s = "ide", t = "idea", return 'a'
s = "coding", t "ingcod", return ''
*/

#include <iostream>
#include <string>
#include <unordered_map>

using namespace std;

string spotTheDiff(string s, string t) {
  unordered_map<char, int> mp;
  for (auto ch : t) {
    mp[ch]++;
  }

  for (int i = 0; i < s.length(); i++) {
    char ch = s[i];
    mp[ch]--;
    if (mp[ch] == 0) {
      mp.erase(ch);
    }
  }
  string res = "";
  for (auto it : mp) {
    if (it.second == 1) {
      res += it.first;
    }
  }
  return res;
}

int main() {
  string s = "foobar";
  string t = "barfoot";
  string s1 = "ide";
  string t1 = "idea";
  string s2 = "coding";
  string t2 = "ingcod";

  cout << spotTheDiff(s, t) << endl;
  cout << spotTheDiff(s1, t1) << endl;
  cout << spotTheDiff(s2, t2) << endl;

  return 0;
}